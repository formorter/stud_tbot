import os
import asyncio
from utils.misc.logger import logger as log
from database import Schedule
from datetime import datetime
from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from loader import dp, bot
from anecdot import Anecdot
"""handler –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø–∞—Ä–∞—Ö"""

chat_ids = {}

anecdots = Anecdot()

@dp.message_handler(CommandStart())
async def echo(message: types.Message):
    """–ë–µ–∑–¥–∞—Ä–Ω—ã–π –ª–æ–≥"""
    # print('message handler') # debug
    # log.info(f'–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.chat.id}, {message.from_user}, {chat_ids}') # debug
    if chat_ids.get(message.chat.id, None):
        chat_ids[message.chat.id] = chat_ids[message.chat.id].append(message.from_user)
    else:
        chat_ids[message.chat.id] = [message.from_user]
        log.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [{message.chat.username}, id={message.chat.id}] –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è')
        log.info(f'Connected users: {chat_ids}')
    # text = f'{message.message_id} {message.from_user} {message.text}'
    # msg = await message.reply('–ü—Ä–∏–≤')


async def delete_message(message: types.Message, sleep_time: int = 0):
    await asyncio.sleep(sleep_time)
    await bot.delete_message(chat_id=os.getenv('GROUP_ID'), message_id=message.message_id)
    log.info('–°–æ–æ–±—â–µ–Ω–∏–µ {} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ'.format(message.message_id))


async def periodic(sleep_for):  # –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–¥
    with open('data/conf.txt', 'r') as f:
        data = f.readline()
        upperWeek = bool(data.split('=')[1])
    while True:
        await asyncio.sleep(sleep_for)
        now = datetime.now()
        day_of_week = now.strftime('%A')
        if day_of_week == 'Monday' and datetime.strftime(now,"%H:%M") == '00:00':
            with open('data/conf.txt', 'w') as f:
                upperWeek = not upperWeek
                data = f'upperWeek={upperWeek}'
                f.write(data)
        for lesson in Schedule.select():
            if lesson.date == f'{now}, {day_of_week}' and lesson.isUpperWeek == upperWeek:
                msg = await bot.send_message(os.getenv('GROUP_ID'), f"üòà {anecdots.get_random()} üòà\n"
                                                    f"\n –ü–∞—Ä–∞ {lesson.name} —É {lesson.teacher} "
                                                    f"\n —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: {lesson.link}",
                                                    disable_notification=True)
                print(datetime.strftime(now, "%H:%M"), f'{lesson.name} - –í–´–í–ï–î–ï–ù')
                asyncio.create_task(delete_message(msg, 600))
        log.info(f'–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞')